---
layout: post
title:  "UI分析利器 Reveal"
category: iOS开发工具
date:   2015-05-23 
---


reveal网址是（ http://revealapp.com ），iOS界面调试工具。写过网页的都知道firefox还有chrome之流。它们都有这个“审查元素”的功能！那么reveal就是iOS客户端的“审查元素”。

进入官网我们下载一个适用版的“Download Trial”，不想掏钱，就用试用版，虽然试用期30天，但是有个小方法能让你一直用下去。右上角“打开日期时间偏好设置”，把时间定格在你安装当日加30天之内的时间，建议是加10天，因为之后它会烦人的提示你，还剩几天。

##1.1 Reveal 介绍

既然说到它是起到“审查元素”的作用。那么，我们就可以肆意的修改外观了，比如改文字，改颜色，改尺寸。不用一直“command＋r”。我们通过工具修改之后，记住，然后在代码中或者IB中修改。省时省力！

界面分为三部分：

1.左边：界面控件的树形层级结构，一目了然。想看哪个控件，双击它。这样没有多余视野的干扰。

2.中间：界面显示区域。平面或者立体查看界面布局效果。层次更加分明。

3.右边：控件的不同参数的导航区域。修改具体的参数选择具体的“指示器”（inspector）。修改完，中间布局效果实时显示。


##1.2 Reveal的使用

###1.2.1 Reveal 与 模拟器的结合调试

方法一：静态框架集成

1> 菜单栏找到 help>Show Reveal Library in Finder 然后点击它，赫然所见 有两个库：libReveal.dylib 动态库，Reveal.framework 静态库

2>既然讲静态库，那么就把Reveal.framework拖入你的项目中（怎么拖？平常你用第三方sdk那种拖法）

3>设置连接属性（设置 Other linker flags）

![](/images/reveal/reveal01.png)

4>运行你的项目，然后打开reveal，在reveal里面看到你的项目界面

方法二：动态框架集成

1>拖入动态库到工程文件

2>添加libReveal.dylib到资源包

3>

方法三：无需改变工程文件

1> 打开终端，输入 vim ~/.lldbinit创建.lldbinit的文件，然后将如下内容输入该文件中：

```
commandJaliasJreveal_load_simJexprJ(void*) dlopen("/Applications/Reveal.app/Contents/SharedSupport/iOS? Libraries/libReveal.dylib",J0x2);

commandJaliasJreveal_load_devJexprJ(void*)dlopen([(NSString*)[(NSBundle*) [NSBundleJmainBundle]JpathForResource:@"libReveal"JofType:@"dylib"]J cStringUsingEncoding:0x4],J0x2);

commandJaliasJreveal_startJexprJ(void)[(NSNotificationCenter*) [NSNotificationCenterJdefaultCenter]JpostNotificationName: @"IBARevealRequestStart"Jobject:nil];

commandJaliasJreveal_stopJexprJ(void)[(NSNotificationCenter*) [NSNotificationCenterJdefaultCenter]JpostNotificationName: @"IBARevealRequestStop"Jobject:nil];
```
该步骤其实为lldb设置了4个别名，这样可以方便后续的操作。4个别名意义如下：

```
1.reveal_load_sim 为模拟器加载reveal调试用的动态链接库。这个只在iOS模拟器上有效。它从Reveal的应用程序bundle中找到并加载libReveal.dylib（请确保你把Reveal安装到了系统的Application文件夹，如果你换地方了，你修改上述的文件）。

2.reveal_load_dev 为真机加载reveal调试用的动态链接库。这个命令在iOS设备和模拟器上都有效。不过，它需要你在Build Phase中的的Copy Bundle Resources中加上libReveal.dylib，请确保没有放到Link Binary With Libraries这个地方。

3.reveal_start 启动reveal调试功能，这个命令发出一个通知启动Reveal Server。

4.reveal_stop 停止reveal调试功能，这个命令发出一个通知停止Reveal Server。
```

2>在AppDelegate类的application::didFinishLaunchingWithOptions:



###1.2.2  Reveal 与 真机的结合调试

用真机结合主要是看它人的app的UI界面。前提条件手机必须是越狱机器（盘古越狱[http://www.pangu.io/](http://www.pangu.io/)）。

1>安装 OpenSSH跟 Cydia Substrate（安装过的跳过此步）
* 安装 OpenSSH：找到Cydia app进入，点击搜索 输入 OpenSSH，选择然后安装 （SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。）。OpenSSH是连接传输工具。

```
测试OpenSSH，前提，手机跟电脑是同一个局域网。

~ $ ssh root@手机ip地址
紧接着输入密码：密码默认“alpine”

看到你手机的名字，说明连接成功了

为了安全起见，把默认密码改掉，连接状态下输入下面指令
~ $ passwd
根据提示设置
```
* 安装 Cydia Substrate。安装方法同上。只有安装了安装 Cydia Substrate 才会有MobileSubstrate。mobilesubstrate是cydia插件/软件运行的一个基础依赖包。他提供软件运行的公共库，可以用来动态替换内存中的代码、数据等。安装的插件或软件比如iFile、Activator、SBSettings几乎都是依赖mobilesubstrate才能运行的。


2>上传libReveal.dylib 到手机上的 /Library/MobileSubstrate/DynamicLibraries（这个目录下存放着所有在系统启动时就需要加载的动态链接库，所以把reveal的动态链接库上传），怎么获取动态链接库，参见上文“方法一”

```
~ $ cd /Applications/Reveal.app/Contents/SharedSupport/iOS-Libraries 

~ $ scp libReveal.dylibJJroot@192.168.xxx.xxx:/Library/MobileSubstrate/DynamicLibraries 

紧接着根据提示输入登陆密码之类的

```

3> 上传libReveal.plist文件到 /Library/MobileSubstrate/DynamicLibraries下面

格式如下：


![](/images/reveal/reveal02.png)

至于如何获取它人app的bundle identifier，在这里就不说明了，常识了都。获取到就添加一条item就可以了。

继续用 scp 指令上传

```
cd 到 libReveal.plist 目录下

~ $ scp libReveal.plist root@手机IP地址:/Library/MobileSubstrate/DynamicLibraries
```

使用心得，以后你只需要记住上传libReveal.plist就可以了，因为之前该做的工作都做了。

4>打开你的reveal，打开你要查看的app（就是你刚才上传bundle identifier对应的app，如果是打开的，请关闭重新打开，reveal）

然后，无拘无束的去看别人的界面吧。

##1.3 Reveal分析他人app —— “饿了么”

就像开始说的app的“审查元素”。我通常是分析别人的应用布局。看它的布局用到了哪些控件。或者用了哪些第三方的框架。然后，收集第三方框架。收集解决思路。优化思路。

1.饿了么的订餐页面的餐厅“cell”上有的是画上去的

优化cell的一条思路就是减少控件的使用。通过分析cell。看到“30元起送”等等，感觉像是label，其实是画上去的。因为reveal界面不能点击它。

2.侧滑使用了第三方侧滑控件：MMDrawerController

分析是否用了第三方框架的思路：通常我们命名自己的项目是有规律的。比如我的就是XY（小言）或者是我项目的简称。那么突然发现有个命名不一样的。我感觉是第三方框架。那么我百度搜下这个控件的名字看我所想的是否正确。



参考资料：

* 《iOS开发进阶》唐巧 著
*  Reveal：分析iOS UI的利器 [http://security.ios-wiki.com/issue-3-4/](http://security.ios-wiki.com/issue-3-4/)
* 编译参数-ObjC的说明  [http://blog.csdn.net/gaoyp/article/details/38707117?utm_source=tuicool](http://blog.csdn.net/gaoyp/article/details/38707117?utm_source=tuicool)
*  <iOS>关于Xcode上的Other linker flags [http://www.cnblogs.com/robinkey/archive/2013/05/27/3101095.html](http://www.cnblogs.com/robinkey/archive/2013/05/27/3101095.html)
* Integrating Reveal without modifying your Xcode project[http://blog.ittybittyapps.com/blog/2013/11/07/integrating-reveal-without-modifying-your-xcode-project/](http://blog.ittybittyapps.com/blog/2013/11/07/integrating-reveal-without-modifying-your-xcode-project/)

* MobileSubstrate是什么？怎么更新MobileSubstrate [http://news.tongbu.com/8509_71854.html](http://news.tongbu.com/8509_71854.html)















